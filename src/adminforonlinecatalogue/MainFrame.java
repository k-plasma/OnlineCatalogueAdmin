/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminforonlinecatalogue;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author charles
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    Main_Window MW = new Main_Window();
    Main_Window MW1 = new Main_Window();
    
    public Connection getConnection() {
        Connection con = null;
        
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/products_db", "root", "");
            return con;
        } catch (SQLException ex) {
            Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Not Connected");
            return null;
        }
    }
    Cloning CL=new Cloning(getProductList());
    
    public ArrayList<Product> getProductList() {
        
        ArrayList<Product> productList = new ArrayList<Product>();
            Connection con = getConnection();
            String query = "SELECT * FROM products";
            
            Statement st;
            ResultSet rs;
            
        try {
            st = con.createStatement();
            rs = st.executeQuery(query);
            Product product;
            
            while(rs.next()) {
                if(rs.getString("category").compareTo("Clothes") == 0)
                {
                    product = new Clothes(rs.getInt("id"), rs.getString("name"),Float.parseFloat(rs.getString("price")),rs.getString("add_date"),rs.getBytes("image"),rs.getString("category"), rs.getString("Type"));
                }
                else
                {
                    product = new Shoes(rs.getInt("id"), rs.getString("name"),Float.parseFloat(rs.getString("price")),rs.getString("add_date"),rs.getBytes("image"),rs.getString("category"),rs.getString("Type"));
                }
                
                productList.add(product);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return productList;
    }
   
                       
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Store1 = new javax.swing.JButton();
        Store2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Store1.setText("Store 1");
        Store1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Store1ActionPerformed(evt);
            }
        });

        Store2.setText("Store 2");
        Store2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Store2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(Store1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                .addComponent(Store2)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Store1)
                    .addComponent(Store2))
                .addContainerGap(144, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     String MyStore = "New";
    private void Store1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Store1ActionPerformed
      if(MW.getConnection() ==  null)
        {
            MW.setConnection(getConnection());
            MW.setList(getProductList());
            MW.Show_Products_In_JTable();
            MW.setTitle(Store1.getText()+" Uploading From Database");
            MW.setVisible(true);
            MyStore = Store1.getText();
        }
        else if(MyStore.compareTo(Store1.getText()) == 0)
        {
            MW1.setVisible(false);
            MW.setList(getProductList());
            MW.Show_Products_In_JTable();
            MW.setTitle(Store1.getText()+" Uploading From Database");
            MW.setVisible(true);
            MyStore = Store1.getText();
        }
        else 
        {
            MW.setVisible(false);
            MW1.setConnection(getConnection());
            MW1.setList(CL.clone());
            MW1.Show_Products_In_JTable();
            MW1.setTitle(Store1.getText()+" Cloned");
            MW1.setVisible(true);
        }   
    }//GEN-LAST:event_Store1ActionPerformed

    private void Store2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Store2ActionPerformed
        if(MW.getConnection() ==  null)
        {
            MW.setConnection(getConnection());
            MW.setList(getProductList());
            MW.Show_Products_In_JTable();
            MW.setTitle(Store2.getText()+" Uploading From Database");
            MW.setVisible(true);
            MyStore = Store2.getText();
            
        }
        else if(MyStore.compareTo(Store2.getText()) == 0)
        {
            MW1.setVisible(false);
            MW.setList(getProductList());
            MW.Show_Products_In_JTable();
            MW.setTitle(Store1.getText()+" Uploading From Database");
            MW.setVisible(true);
            MyStore = Store1.getText();
        }
        else
        {
            MW.setVisible(false);
            MW1.setConnection(getConnection());
            MW1.setList(CL.clone());
            MW1.Show_Products_In_JTable();
            MW1.setTitle(Store2.getText()+" Cloned");
            MW1.setVisible(true);
         
        }
        
    }//GEN-LAST:event_Store2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Store1;
    private javax.swing.JButton Store2;
    // End of variables declaration//GEN-END:variables
}
